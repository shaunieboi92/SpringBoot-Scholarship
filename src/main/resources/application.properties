## Boot tries to auto-configure a DataSource if spring-data-jpa is in the classpath by reading the database configuration from application.properties file.

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
##spring.datasource.url = jdbc:mysql://localhost;databaseName =notes_app?useSSL=false
##spring.datasource.username = root
##spring.datasource.password = Reinakoh@91

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
##spring.jpa.hibernate.ddl-auto = update

##spring.mvc.view.prefix:/WEB-INF/jsp/
##spring.mvc.view.suffix:.jsp

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
##default port 3306
spring.datasource.url = jdbc:mysql://localhost:3306/sampledatabase?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

# Username and password
spring.datasource.username = root
spring.datasource.password = Reinakoh@91
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource


# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# ===============================
# = SLF4J Logger
# ===============================

# logging level
logging.level.org.springframework=ERROR
logging.level.com.mkyong=DEBUG

# output to a file
logging.file=app.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

logging.pattern.file=%d %p %c{1.} [%t] %m%n

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

## if no active profile, default is 'default'
##spring.profiles.active=prod

# root level
#logging.level.=INFO
